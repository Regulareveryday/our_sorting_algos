
==================== FINAL INTERFACE ====================
2017-01-27 08:59:27.6158203 UTC

interface our-sorting-algos-0.1.0.0-9Uo5Cavp7OMJexfpjtEIv6:Heapsort 8001
  interface hash: 7889b3ae9c9706c8332927b232a8c13a
  ABI hash: 7662403c30bac845d3e2197c789788d5
  export-list hash: e6d3fd88e7acd8538c9c07e97bb3954e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 365edb496d38399416a64131c77130e2
  sig of: Nothing
  used TH splices: False
  where
exports:
  Heapsort.buildHeap
  Heapsort.heapSortLoop
  Heapsort.heapify
  Heapsort.heapsort
  Heapsort.leftChild
  Heapsort.parent
  Heapsort.rightChild
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.List 47d436dfb7454bb1883fb4d943e3f389
import  -/  base-4.9.0.0:GHC.Num f0aed3315b3ed1b330b71fc4148a5581
import  -/  base-4.9.0.0:GHC.Real 011de9ca3282ad24a84e4e15f974f98e
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
e2056bb482c98a0b01f4e9b6b55a8eb1
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Heapsort.$trModule2
                   Heapsort.$trModule1) -}
51b7eb4a6a684403517c1395d2742b9a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Heapsort"#) -}
3aa0bdfad8feef2740585d79b0a4187c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "our-sorting-algos-0.1.0.0-9Uo5Cavp7OMJexfpjtEIv6"#) -}
9155ead46b88c21c75d3bb98384b8670
  $wparent :: GHC.Real.Integral a => a -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLL),U(1*U,A,A,A,1*C1(C1(U)),A,A,A,A)><L,U>,
     Inline: [0],
     Unfolding: (\ @ a (w :: GHC.Real.Integral a) (w1 :: a) ->
                 let {
                   $dReal :: GHC.Real.Real a = GHC.Real.$p1Integral @ a w
                 } in
                 let {
                   $dNum :: GHC.Num.Num a = GHC.Real.$p1Real @ a $dReal
                 } in
                 case GHC.Classes.<=
                        @ a
                        (GHC.Real.$p2Real @ a $dReal)
                        w1
                        (GHC.Num.fromInteger @ a $dNum Heapsort.parent1) of wild {
                   GHC.Types.False
                   -> GHC.Real.div
                        @ a
                        w
                        (GHC.Num.-
                           @ a
                           $dNum
                           w1
                           (GHC.Num.fromInteger @ a $dNum Heapsort.leftChild1))
                        (GHC.Num.fromInteger @ a $dNum Heapsort.leftChild2)
                   GHC.Types.True
                   -> GHC.Num.negate
                        @ a
                        $dNum
                        (GHC.Num.fromInteger @ a $dNum Heapsort.leftChild1) }) -}
2642738ce084569d9caec97e4d5a79d7
  buildHeap :: GHC.Classes.Ord a => [a] -> GHC.Types.Int -> [a]
  {- Arity: 3,
     Strictness: <L,U(A,A,A,C(C1(U)),C(C1(U)),A,A,A)><S,1*U><L,1*U(U)> -}
2f7af26d1186e7b092f561193f651a1b
  heapSortLoop :: GHC.Classes.Ord a => [a] -> GHC.Types.Int -> [a]
  {- Arity: 3,
     Strictness: <L,U(A,A,A,C(C1(U)),C(C1(U)),A,A,A)><S,1*U><L,1*U(1*U)> -}
3eb72439603f37c53eb51b2fa088b6dc
  heapify :: GHC.Classes.Ord a => [a] -> GHC.Types.Int -> [a]
  {- Arity: 3,
     Strictness: <L,U(A,A,A,C(C1(U)),C(C1(U)),A,A,A)><S,1*U><L,1*U(U)> -}
58f0648f96872d6967d70f6ab49f6dad
  heapsort :: GHC.Classes.Ord a => [a] -> [a]
  {- Arity: 2,
     Strictness: <L,U(A,A,A,C(C1(U)),C(C1(U)),A,A,A)><S,1*U>,
     Unfolding: (\ @ a ($dOrd :: GHC.Classes.Ord a) (ds :: [a]) ->
                 case ds of wild {
                   [] -> GHC.Types.[] @ a
                   : ipv ipv1
                   -> Heapsort.heapSortLoop
                        @ a
                        $dOrd
                        (Heapsort.buildHeap
                           @ a
                           $dOrd
                           wild
                           (case GHC.List.$wlenAcc @ a wild 0# of ww2 { DEFAULT ->
                            GHC.Types.I# (GHC.Prim.-# ww2 1#) }))
                        (case GHC.List.$wlenAcc @ a wild 0# of ww2 { DEFAULT ->
                         GHC.Types.I# (GHC.Prim.-# ww2 1#) }) }) -}
bd71e5239fea8e8c5348f39a62eb0c99
  leftChild :: GHC.Num.Num a => a -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))LLLLLL),U(1*C1(C1(U)),A,1*C1(C1(U)),A,A,A,C(U))><L,U>,
     Unfolding: (\ @ a ($dNum :: GHC.Num.Num a) (a1 :: a) ->
                 GHC.Num.+
                   @ a
                   $dNum
                   (GHC.Num.*
                      @ a
                      $dNum
                      (GHC.Num.fromInteger @ a $dNum Heapsort.leftChild2)
                      a1)
                   (GHC.Num.fromInteger @ a $dNum Heapsort.leftChild1)) -}
b0f88bd4eb64a81e2dd2f7405bab20f5
  leftChild1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
8606335cb3d86bc44118fdab133e78a5
  leftChild2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
4077ea42b67dee8e005a296c59470ffc
  parent ::
    (GHC.Real.Integral a, GHC.Num.Num a, GHC.Classes.Ord a) => a -> a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(SLLLLLLLL),U(1*U,A,A,A,1*C1(C1(U)),A,A,A,A)><L,A><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ @ a
                   (w :: GHC.Real.Integral a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: GHC.Classes.Ord a)
                   (w3 :: a) ->
                 Heapsort.$wparent @ a w w3) -}
a450b4d360605c5c9fcb85d56fe4d6de
  parent1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
140213067ff47a3a1fd95730375fdfc7
  rightChild :: GHC.Num.Num a => a -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))LLLLLL),U(1*C1(C1(U)),A,1*C1(C1(U)),A,A,A,C(U))><L,U>,
     Unfolding: (\ @ a ($dNum :: GHC.Num.Num a) (a1 :: a) ->
                 GHC.Num.+
                   @ a
                   $dNum
                   (GHC.Num.*
                      @ a
                      $dNum
                      (GHC.Num.fromInteger @ a $dNum Heapsort.leftChild2)
                      a1)
                   (GHC.Num.fromInteger @ a $dNum Heapsort.leftChild2)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

